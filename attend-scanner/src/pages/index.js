import Head from "next/head";
import React, { useState } from "react";
import BarcodeScannerComponent from "@steima/react-qr-barcode-scanner";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import axios from "axios";

const inter = Inter({ subsets: ["latin"] });
const API_URL = process.env.NEXT_PUBLIC_API_URL;

export default function Home() {
  const [data, setData] = React.useState("Not Found");
  const [qrscan, setqrscan] = useState();
  const [stopStream, setStopStream] = React.useState(false);
  const [details, setDetails] = React.useState(true);
  const [data1, setData1] = React.useState();
  //...
  const dismissQrReader = () => {
    // Stop the QR Reader stream (fixes issue where the browser freezes when closing the modal) and then dismiss the modal one tick later
    setStopStream(true);
  };

  const [query, setQuery] = useState({
    SRN: "",
    name: "",
    phone: "",
    email: "",
  });

  const handleChange = () => (e) => {
    const name = e.target.name;
    const value = e.target.value;
    setQuery((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const formData = new FormData();
    Object.entries(query).forEach(([key, value]) => {
      formData.append(key, value);
    });
    const jsonObject = {};

    for (const [key, value] of formData) {
      jsonObject[key] = value;
    }

    // console.log(query);

    axios
      .post(`${API_URL}/checkin`, jsonObject, {
        headers: { Accept: "application/json" },
      })
      .then(function (response) {
        setQuery({
          SRN: "",
          name: "",
          phone: "",
          email: "",
        });

        setqrscan(response.data.QR);
      })
      .catch(function (error) {
        console.log(error);
      });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form
          acceptCharset="UTF-8"
          method="POST"
          id="ajaxForm"
          onSubmit={handleSubmit}
        >
          <label>SRN</label>
          <input
            type="text"
            name="SRN"
            className="form-control"
            value={query.SRN}
            onChange={handleChange()}
          ></input>
          <br />
          <label>Name</label>
          <input
            type="text"
            name="name"
            className="form-control"
            value={query.name}
            onChange={handleChange()}
          ></input>
          <br />
          <label>Email</label>
          <input
            type="text"
            name="email"
            className="form-control"
            value={query.email}
            onChange={handleChange()}
          ></input>
          <br />
          <label>Phone</label>
          <input
            type="text"
            name="phone"
            className="form-control"
            value={query.phone}
            onChange={handleChange()}
          ></input>

          <button type="submit" className="btn btn-primary">
            Submit
          </button>
        </form>
        {qrscan ? (
          <a href={"data:image/png;base64," + qrscan} download="myimage">
            <Image
              id="imgElem"
              src={"data:image/png;base64," + qrscan}
              alt="Picture of the author"
              width={200}
              height={200}
            ></Image>
          </a>
        ) : null}

        {details ? (
          <BarcodeScannerComponent
            width={500}
            height={500}
            onUpdate={(err, result) => {
              // console.log(err, result)
              if (result) {
                setStopStream(true);
                axios
                  .post(
                    `${API_URL}/info`,
                    { Token: result.text },
                    { headers: { Accept: "application/json" } }
                  )
                  .then((resp) => {
                    // console.log(resp)
                    setData1(resp.data.user);
                  });
                setDetails(false);
              }
            }}
            stopStream={stopStream}
          />
        ) : data1 ? (
          <div>
            <center>
              <h2>{data1.SRN}</h2>
              <h2>{data1.name}</h2>
              <div>
                {/* <label>Coffee1</label><input type="checkbox" checked={data1.meals.coffee1}></input> */}
                <button disabled={data1.meals.coffee1} type="button">
                  Coffee1
                </button>
                <br />
                <button disabled={data1.meals.coffee2} type="button">
                  Coffee2
                </button>
                <br />
                <button disabled={data1.meals.coffee3} type="button">
                  Coffee3
                </button>
                <br />
              </div>
            </center>
          </div>
        ) : null}
        {/* {console.log(data1.meals)} */}

        <button onClick={dismissQrReader}>disable</button>
      </main>
    </>
  );
}
